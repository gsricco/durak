version: '3'

services:
  durak_db:
    container_name: durak_db
    image: postgres:14-alpine
    ports:
      - "5434:5432"
    env_file:
      - ../.env_db
    restart: unless-stopped
    volumes:
      - durak_pgdata:/var/lib/postgresql/data
  durak_pg_admin:
    container_name: durak_pg_admin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: superadminkorney@admin.com
      PGADMIN_DEFAULT_PASSWORD: yoyoyoqweasdzxc
    ports:
      - "5050:80"
  durak_backend:
    container_name: durak_backend
    restart: unless-stopped
    build:
      context: ../
    env_file:
      - ../.env
    ports:
      - "8888:8000"
    depends_on:
      - durak_db
      - durak_redis_stack
    volumes:
      - durak_static:/app/start_all_template/static
      - durak_media:/app/media
    command:
      - /start
  durak_redis_stack:
    image: redis/redis-stack-server:latest
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD}"
    env_file:
      - ../.env
    ports:
      - "6379:6379"
    volumes:
      - durak_redis:/data/
    container_name: durak_redis_stack
  celery_worker:
    container_name: durak_celery_worker
    build:
      context: ../.
    restart: unless-stopped
    env_file:
      - ../.env
    depends_on:
      - durak_db
      - durak_redis_stack
      - durak_backend
    command: /start-celery-worker
  celery_beat:
    container_name: durak_celery_beat
    build:
      context: ../.
    restart: unless-stopped
    env_file:
      - ../.env
    depends_on:
      - durak_db
      - durak_redis_stack
      - durak_backend
    command: /start-celery-beat
#  nginx:
#    image: nginx:1.23-alpine
#    build :
#      context: ./
#    container_name: durak-nginx
#    restart: unless-stopped
#    ports:
#      - "8080:80"
#    volumes:
#      - ./nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - durak_static:/app/start_all_template/static
#      - durak_media:/app/media
#    depends_on:
#      - durak_backend
#    networks:
#      - all
volumes:
  durak_pgdata:
  durak_static:
  durak_media:
  durak_redis: